;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-baidu" viewBox="0 0 1000 1000">' +
    '' +
    '<path d="M278.5498 475.8344c81.0734-17.4172 70.0385-114.2965 67.605-135.4781-3.9775-32.6519-42.3721-89.6952-94.5149-85.1992-65.6143 5.881-75.1922 100.6558-75.1922 100.6558C167.5694 399.639 197.6743 493.2366 278.5498 475.8344zM364.6361 644.3291c-2.3805 6.8194-7.6741 24.2366-3.08 39.3993 9.0442 34.0369 38.5895 35.5629 38.5895 35.5629h42.45499862087712V615.5276722382225h-45.452092469189594C376.7054 621.6185 366.8467 637.5098 364.6361 644.3291zM429.0171 313.3605c44.7785 0 80.9615-51.5261 80.9615-115.2339 0-63.6498-36.184-115.1619-80.9615-115.1619-44.6946 0-80.9875 51.5121-80.9875 115.1619C348.0297 261.8345 384.3226 313.3605 429.0171 313.3605zM621.8535 320.9774c59.8449 7.7707 98.3225-56.091 105.9676-104.4952 7.815-48.3322-30.8044-104.4922-73.1735-114.1386-42.455-9.7314-95.4663 58.2595-100.2842 102.6024C548.5941 259.1453 562.1215 313.2896 621.8535 320.9774zM768.4842 605.5145c0 0-92.5811-71.6304-146.6307-149.0589-73.2594-114.1556-177.3482-67.6961-212.1591-9.6465-34.6699 58.0496-88.6896 94.7628-96.3637 104.4922-7.7821 9.5775-111.8489 65.7374-88.7446 168.3539 23.1043 102.5335 104.2327 100.5718 104.2327 100.5718s59.787 5.881 129.1549-9.6465c69.3939-15.3866 129.1269 3.8514 129.1269 3.8514s162.0899 54.2702 206.4467-50.2239C837.8521 659.7157 768.4842 605.5145 768.4842 605.5145zM491.1586 761.016H385.7786447819187c-45.5061-9.0728-63.6245-40.1278-65.9211-45.4212-2.2396-5.3764-15.1504-30.3414-8.3197-72.7946 19.6605-63.6359 75.7508-68.2008 75.7508-68.2008h56.09332464552544v-68.9432564721119l47.7746 0.7285V761.0160311308932zM687.4138 760.2885H566.1529267385943c-46.9891-12.1128-49.2027-45.4902-49.2027-45.4902V580.6902919820361l49.2027-0.7975v120.5242845350852c2.9971 12.8553 18.9609 15.1777 18.9609 15.1777h49.95922593230705V580.6902919820361h52.33971194320412V760.28852438047zM859.0786 402.2563c0-23.1613-19.2388-92.887-90.5944-92.887-71.4675 0-81.0165 65.8064-81.0165 112.3348 0 44.3979 3.7536 106.3819 92.5272 104.4092C868.7964 524.1516 859.0786 425.5405 859.0786 402.2563z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-jiahao" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M896 480 544 480 544 128 480 128 480 480 128 480 128 544 480 544 480 896 544 896 544 544 896 544Z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-yonghu" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M814.623877 655.023414c-86.702688-92.682889-115.236558-99.237165-115.236558-99.237165s72.02336-77.231989 72.02336-198.499913c0-121.256668-128.644939-226.835262-230.448556-226.835262-4.841262 0-9.399067 1.178849-13.401218 3.25309-4.002151-2.073218-8.555863-3.25309-13.389962-3.25309-5.66707 0-10.9504 1.619894-15.408945 4.405333-4.457522-2.785439-9.742898-4.405333-15.420201-4.405333-101.803617 0-230.448556 105.579617-230.448556 226.835262 0 121.267924 72.02336 198.499913 72.02336 198.499913s-28.534893 6.553253-115.236558 99.237165c-80.322373 85.879949-71.998801 226.835262-71.998801 226.835262s5.158487 14.180977 28.78458 14.180977c23.64963 0 28.809139-14.180977 28.809139-14.180977s3.963265-136.195915 43.213197-184.307679c53.283554-65.293075 158.451802-141.763724 158.451802-141.763724s-86.427418-68.52263-86.427418-198.499913c0-118.365828 106.213044-164.414607 152.110373-178.787966 5.236258 5.336542 12.57848 8.661264 20.720927 8.661264 5.676279 0 10.961656-1.619894 15.420201-4.405333 4.457522 2.785439 9.741875 4.405333 15.408945 4.405333 4.834098 0 9.387811-1.178849 13.389962-3.252067 4.002151 2.073218 8.558933 3.252067 13.401218 3.252067 8.131191 0 15.46932-3.326768 20.703531-8.66638 45.88812 14.368242 152.125723 60.412928 152.125723 178.793082 0 129.977283-86.428442 198.499913-86.428442 198.499913s105.170295 76.470649 158.451802 141.763724c39.251979 48.112788 43.214221 184.307679 43.214221 184.307679s5.158487 14.180977 28.809139 14.180977c23.62507 0 28.783557-14.180977 28.783557-14.180977S894.945227 740.903364 814.623877 655.023414z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-sou" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M872.834 819.031l-0.021-0.020v0.020h0.021c6.611 7.724 9.929 16.273 9.929 25.645 0 10.485-3.728 19.446-11.186 26.902-6.683 6.903-16.034 11.188-26.387 11.188-0.189 0-0.376-0.002-0.564-0.006-4.4 0-8.664-0.7-12.804-2.079-6.214-2.076-11.451-5.687-15.438-10.387l0.112 0.893-204.607-206.068c-49.128 34.771-104.085 52.135-164.831 52.135-6.077 0-12.277-0.268-18.622-0.803-12.503-1.101-23.947-3.154-35.015-6.127-34.433-2.314-79.83-21.736-117.236-50.923-22.673-13.314-53.59-46.129-76.785-86.976-18.876-31.629-31.618-69.022-35.597-108.993 2.099 24.518-2.324-3.171-2.664-31.839 0.219 9.819 0.022 3.726 0.022-2.411 0-17.23 1.554-34.097 4.529-50.469 7.223-45.086 25.601-86.609 52.198-121.533 13.217-24.748 55.417-62.558 105.78-85.633-26.24 10.779 0.95-4.114 31.044-14.598 27.503-9.971 59.247-15.738 92.338-15.738 0.003 0 0.006 0 0.007 0 13.266 0 25.953 0.824 38.128 2.493 32.566 4.409 63.753 14.337 93.58 29.785 48.239 25.143 87.102 62.529 113.335 108.106-9.518-21.469 10.215 10.521 23.749 47.495 13.533 36.974 19.486 74.485 17.818 112.552-2.204 63.464-24.018 120.564-65.441 171.319l205.41 206.068h-0.803zM690.599 440.818c0.21-3.697 0.33-8.022 0.33-12.373 0-31.328-6.205-61.208-17.456-88.475-13.231-34.958-34.583-65.86-61.735-90.484 21.143 20.301 6.93 4.997-9.343-8.537-30.272-25.39-67.305-43.731-107.998-51.99 25.734 4.367-9.068-3.862-45.794-3.862-9.87 0-19.603 0.595-29.162 1.749-1.639-0.081-4.336 0.248-6.931 0.839l-4.358 0.695c-44.686 7.108-84.078 25.889-116.086 53.095-23.983 14.957-55.634 55.983-72.075 104.063-2.047-6.829-13.232 30.701-15.189 72.084-1.936 41.383 5.645 79.738 22.782 115.043 20.889 45.873 54.812 82.768 97.015 106.791-0.152 5.549 43.151 25.628 90.828 31.684 1.539 3.059 37.155 4.997 73.039-1.081 30.977-5.587 58.609-16.326 83.316-31.388 8.622-1.65 39.887-25.597 64.428-55.302-9.505 15.858 17.567-17.681 35.063-56.467-25.001 44.533-14.64 28.672-6.36 11.575v0.021c15.865-30.484 25.376-66.489 25.885-104.668z" fill="" ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)